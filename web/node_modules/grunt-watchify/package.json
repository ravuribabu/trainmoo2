{
  "_args": [
    [
      {
        "raw": "grunt-watchify",
        "scope": null,
        "escapedName": "grunt-watchify",
        "name": "grunt-watchify",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/ravuribabu/workspace/trainmoo/web"
    ]
  ],
  "_from": "grunt-watchify@latest",
  "_id": "grunt-watchify@0.1.0",
  "_inCache": true,
  "_location": "/grunt-watchify",
  "_npmUser": {
    "name": "amiorin",
    "email": "npm@ululi.it"
  },
  "_npmVersion": "1.2.23",
  "_phantomChildren": {
    "amdefine": "1.0.0",
    "bops": "0.0.6",
    "browser-builtins": "2.0.5",
    "commondir": "0.0.2",
    "decamelize": "1.2.0",
    "deep-equal": "0.1.2",
    "duplexer": "0.1.1",
    "rfile": "1.0.0",
    "ruglify": "1.0.0",
    "stream-combiner": "0.0.4",
    "through": "2.3.8",
    "uglify-to-browserify": "1.0.2",
    "window-size": "0.1.0",
    "wordwrap": "0.0.2"
  },
  "_requested": {
    "raw": "grunt-watchify",
    "scope": null,
    "escapedName": "grunt-watchify",
    "name": "grunt-watchify",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-watchify/-/grunt-watchify-0.1.0.tgz",
  "_shasum": "adad2372297e78a44f5bb34da126655b16f060e0",
  "_shrinkwrap": null,
  "_spec": "grunt-watchify",
  "_where": "/Users/ravuribabu/workspace/trainmoo/web",
  "author": {
    "name": "Alberto Miorin",
    "url": "http://albertomiorin.com/"
  },
  "bugs": {
    "url": "https://github.com/amiorin/grunt-watchify/issues"
  },
  "contributors": [
    {
      "name": "Alberto Miorin",
      "url": "http://albertomiorin.com"
    }
  ],
  "dependencies": {
    "browserify": ">=2.23.1 <3.0.0"
  },
  "description": "Browserify your code",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.4.1",
    "grunt-contrib-nodeunit": "~0.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "adad2372297e78a44f5bb34da126655b16f060e0",
    "tarball": "https://registry.npmjs.org/grunt-watchify/-/grunt-watchify-0.1.0.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/amiorin/grunt-watchify",
  "keywords": [
    "gruntplugin",
    "browserify",
    "watchify"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/amiorin/grunt-watchify/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "maintainers": [
    {
      "name": "amiorin",
      "email": "npm@ululi.it"
    }
  ],
  "name": "grunt-watchify",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "readme": "# grunt-watchify [![Build Status](https://travis-ci.org/amiorin/grunt-watchify.png?branch=master)](https://travis-ci.org/amiorin/grunt-watchify) [![Dependency Status](https://gemnasium.com/amiorin/grunt-watchify.png)](https://gemnasium.com/amiorin/grunt-watchify)\n\nGrunt task for [node-browserify](https://github.com/substack/node-browserify).\n\n## Getting Started\nThis plugin requires [Grunt](https://gruntjs.com) `~0.4.0` and Node `>=0.8.x`.\n\nInstall this grunt plugin with:\n\n```sh\nnpm install grunt-watchify --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-watchify');\n```\n\n## Common errors\n```sh\nRunning \"watchify:source\" (watchify) task\nFatal error: module \"src/main.js\" not found in require()\n```\n\nIs the ``src`` attribute starting with ``./``?\n``grunt-watchify`` is different from ``grunt-browserify``. It follows the\n[nodejs require.resolve() algorithm](http://nodejs.org/docs/v0.4.8/api/all.html#all_Together...).\n\n```js\n...\n{\n  src: './src/main.js'\n  ...\n}\n...\n```\n\n## Differences with grunt-browserify\n* ``grunt-watchify`` **watches** the dependencies like [watchify][0] and rebuilds\n  the bundle, when one dependency is modified.\n* ``grunt-watchify`` **caches** the dependencies making the rebuild process\n  very fast (useful for big projects).\n* The configuration is different. You have the ``options`` of browserify plus\n  ``keepalive`` and ``callback``.\n* The instance of browserify is passed to ``callback`` where you can use the\n  api of browserify. Remember to return the instance.\n* The ``keepalive`` is useful if you use ``grunt-watchify`` alone. It works like\n  in [grunt-contrib-connect#keepalive](https://github.com/gruntjs/grunt-contrib-connect#keepalive).\n```js\ngrunt.initConfig({\n  watchify: {\n    options: {\n      // defaults options used in b.bundle(opts)\n      detectGlobals: true,\n      insertGlobals: false,\n      ignoreMissing: false,\n      debug: false,\n      standalone: false,\n\n      keepalive: false,\n      callback: function(b) {\n        // configure the browserify instance here\n        b.add();\n        b.require();\n        b.external();\n        b.ignore();\n        b.transform();\n\n        // return it\n        return b;\n      }\n    },\n    example: {\n      src: './src/**/*.js',\n      dest: 'app/js/bundle.js'\n    }\n  }\n});\n```\n* The ``src`` makes difference between ``process`` and ``./process``:\n```js\ngrunt.initConfig({\n  watchify: {\n    example: {\n      src: ['process', './src/**/*.js'],\n      dest: 'app/js/bundle.js'\n    },\n  }\n});\n```\n**Your project files usually start with ``./``**.\n\n* You can use the glob only with your project files and not for the modules in\n  ``node_modules``.\n\n## Examples\nYou find this example in the directory ``example``.\n* ``grunt-watchify`` builds the ``bundle.js`` and watches the dependencies.\n* ``grunt-contrib-watch`` watches the ``bundle.js`` and triggers\n  ``livereload`` when it changes.\n* ``grunt-contrib-connect`` serves the files.\n* ``grunt-contrib-livereload`` is used only for the livereload snippet.\n\n```js\n/*\n * grunt-watchify\n * http://github.com/amiorin/grunt-watchify\n *\n * Copyright (c) 2013 Alberto Miorin, contributors\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar path = require('path');\n\nvar lrSnippet  = require('grunt-contrib-livereload/lib/utils').livereloadSnippet;\nvar mountFolder = function(connect, dir) {\n  return connect.static(path.resolve(dir));\n};\n\nmodule.exports = function(grunt) {\n  grunt.initConfig({\n\n    watchify: {\n      example: {\n        src: './src/**/*.js',\n        dest: 'app/js/bundle.js'\n      },\n    },\n\n    watch: {\n      app: {\n        files: 'app/js/bundle.js',\n        options: {\n          livereload: true\n        }\n      }\n    },\n\n    connect: {\n      options: {\n        port: 9000,\n        // Change this to '0.0.0.0' to access the server from outside.\n        hostname: 'localhost'\n      },\n      livereload: {\n        options: {\n          middleware: function (connect) {\n            return [\n              lrSnippet,\n              mountFolder(connect, 'app')\n            ];\n          }\n        }\n      }\n    }\n  });\n\n  grunt.loadTasks('../tasks');\n\n  grunt.loadNpmTasks('grunt-contrib-watch');\n  grunt.loadNpmTasks('grunt-contrib-connect');\n  grunt.loadNpmTasks('grunt-contrib-livereload');\n\n  grunt.registerTask('default', ['watchify', 'connect', 'watch']);\n};\n```\nHow can you start ``grunt``:\n```sh\n# with other tasks like connect and watch\n# done() is called\ngrunt\n\n# alone like watchify\n# done() is *never* called\ngrunt watchify:example:keepalive\n```\n\n## Credits\n* [browserify](https://github.com/substack/node-browserify) ;-)\n* [watchify](https://github.com/substack/watchify) for the cache code\n* [grunt-browserify](https://github.com/jmreidy/grunt-browserify) for the tests\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/amiorin/grunt-watchify/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n[0]: https://github.com/substack/watchify\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/amiorin/grunt-watchify.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "0.1.0"
}
